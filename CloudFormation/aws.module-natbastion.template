{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Dev - NATs Bastion",
  "Parameters": {
    "AmiImageId": {
      "Description": "AMI image id",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "24"
    },
    "CIDRVPC": {
      "Type": "String"
    },
    "KeyPair": {
      "Description": "EC2 ssh keypair name",
      "Type": "String"
    },
     "Prefix": {
      "Description": "prefix of resources",
      "Type": "String"
    },
    "RouteTableNat1": {
      "Type": "String"
    },
    "RouteTableNat2": {
      "Type": "String"
    },
    "SubnetPublic1": {
      "Type": "String"
    },
    "SubnetPublic2": {
      "Type": "String"
    },
    "SecurityGroupBastion": {
      "Type": "String"
    },
    "SecurityGroupNat": {
      "Type": "String"
    },
    "VPC": {
      "Description": "VPC id",
      "Type": "String"
    }
  },
  "Resources": {
    "IAMRoleNAT": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["ec2.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "NAT_Takeover",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeInstances",
                    "ec2:DescribeRouteTables",
                    "ec2:CreateRoute",
                    "ec2:ReplaceRoute",
                    "ec2:StartInstances",
                    "ec2:StopInstances"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "InstanceProfileNATRole": {
      "Type": "AWS::IAM::InstanceProfile",
      "DependsOn": ["IAMRoleNAT"],
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "IAMRoleNAT"
          }
        ]
      }
    },
    "EC2NatGateway1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId" : { "Fn::GetAtt" : ["EIPEC2NatGateway1", "AllocationId"]},
		"SubnetId": { "Ref": "SubnetPublic1"}
      }
    },
    "EC2NatGateway2": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId" : { "Fn::GetAtt" : ["EIPEC2NatGateway2", "AllocationId"]},
                "SubnetId": { "Ref": "SubnetPublic2"}
      }
    },
    "EC2InstanceBastion": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "KeyName": {
          "Ref": "KeyPair"
        },
        "SubnetId": {
          "Ref": "SubnetPublic1"
        },
        "ImageId": { "Ref": "AmiImageId" },
        "SecurityGroupIds": [
          {
            "Ref": "SecurityGroupBastion"
          }
        ],
        "Tags": [
          {
            "Key": "Stack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [ { "Ref": "Prefix" }, "vpc", "a", "i", "bastion" ] ] }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum -y update\n",
                "yum-config-manager --enable epel\n",
                "exit 0\n"
              ]
            ]
          }
        }
      }
    },
    "EIPEC2InstanceBastion": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": {
          "Ref": "EC2InstanceBastion"
        },
        "Domain": "vpc"
      }
    },
    "EIPEC2NatGateway1": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "EIPEC2NatGateway2": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "RouteNat1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTableNat1" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "EC2NatGateway1" }
      }
    },
    "RouteNat2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTableNat2" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "EC2NatGateway2" }
      }
    }
  },
  "Outputs": {
    "EIPEC2InstanceBastion": {
      "Value": {
        "Ref": "EIPEC2InstanceBastion"
      }
    },
    "EIPEC2NatGateway1": {
      "Value": { "Ref": "EIPEC2NatGateway1" }
    },
    "EIPEC2NatGateway2": {
      "Value": { "Ref": "EIPEC2NatGateway2" }
    }
  }
}
